<!-- Entry point for using RealSense devices -->
<launch>

  <!-- "camera" should be a user friendly string to uniquely identify the device namespace.
       All topics are pushed down into the "camera" namespace, and it is prepended to tf frame ids. -->
  <arg name="camera"          default="SR300" />

  <!-- "serial_no" should be the unique identifier to connect to a device. -->
  <arg name="serial_no"       default="" />

  <!-- Use OpenNI's factory-calibrated depth->RGB registration? -->
  <arg name="depth_registration" default="true" />

  <arg name="depth_frame_id"  default="$(arg camera)_depth_optical_frame" />
  <arg name="rgb_frame_id"    default="$(arg camera)_rgb_optical_frame" />

  <!-- Arguments for remapping all device namespaces -->
  <arg name="depth"            default="depth" />
  <arg name="rgb"              default="rgb" />  
  <arg name="ir"               default="ir" />  
  <arg name="depth_registered" default="depth_registered" />
  <arg name="projector"        default="projector" />

  <!-- Optionally suppress loading the driver nodelet and/or publishing the default tf
       tree. Useful if you are playing back recorded raw data from a bag, or are
       supplying a more accurate tf tree from calibration. -->
  <arg name="load_driver" default="true" />
  <arg name="publish_tf" default="false" />
  <!-- own options -->
  <arg name="mode"                            default="manual"/> <!-- preset manual close -->
  <arg name="enable_pointcloud"               default="true" />
  <arg name="depth_height"                    default="480" />
  <arg name="depth_width"                     default="640" />
  <arg name="color_width"		      default="640" />
  <arg name="color_height"		      default="480" />
  <!-- Processing Modules -->
  <arg name="rgb_processing"                  default="true"/>
  <arg name="ir_processing"                   default="true"/>
  <arg name="depth_processing"                default="true"/>
  <arg name="depth_registered_processing"     default="true"/>
  <arg name="disparity_processing"            default="true"/>
  <arg name="disparity_registered_processing" default="true"/>
  <arg name="hw_registered_processing"        default="true" />
  <arg name="sw_registered_processing"        default="true" />

  <!-- Disable respawn topics by default -->
  <arg name="respawn" default="false" />

  <!-- Worker threads for the nodelet manager -->
  <arg name="num_worker_threads" default="4" />
 
  <!-- Push down all topics/nodelets into "camera" namespace -->
  <!--group ns="$(arg camera)"-->

    <!-- Start nodelet manager in provided namespace -->
    <arg name="manager" value="$(arg camera)_nodelet_manager" />
    <arg name="debug" default="false" /> <!-- Run manager in GDB? -->
    <include file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
      <arg name="name"                value="$(arg manager)" />
      <arg name="debug"               value="$(arg debug)" />
      <arg name="num_worker_threads"  value="$(arg num_worker_threads)" />
    </include>
    <remap from="rgb/image_raw" to="app/camera/rgb/image_raw" />

    <!-- Load driver -->
    <include if="$(arg load_driver)"
             file="$(find realsense_camera)/launch/includes/realsense_r200_nodelet.launch.xml">
      <arg name="camera"                    value="$(arg camera)" />
      <arg name="serial_no"                 value="$(arg serial_no)" />
      <arg name="manager"                   value="$(arg manager)" />    
      <arg name="publish_tf"                value="$(arg publish_tf)" />    
      <arg name="depth"                     value="$(arg depth)" />
      <arg name="rgb"                       value="$(arg rgb)" />
      <arg name="ir"                        value="$(arg ir)" />
      <arg name="depth_processing"          value="$(arg depth_processing)" />
      <arg name="rgb_processing"            value="$(arg rgb_processing)" />
      <arg name="ir_processing"             value="$(arg ir_processing)" />

      <arg name="mode"                      value="$(arg mode)" />
      <arg name="enable_pointcloud"         value="$(arg enable_pointcloud)" />
      <arg name="depth_height"              value="$(arg depth_height)" />
      <arg name="depth_width"               value="$(arg depth_width)" />
      <arg name="color_height"		    value="$(arg color_height)" />
      <arg name="color_width"		    value="$(arg color_width)" />
      <arg name="color_fps"               value="30" />
      <arg name="depth_fps"               value="30" />

    </include>

  <!--/group--> <!-- camera -->

</launch>
